from pathlib import Path
import sys
import tempfile
from unittest import TestCase

from bringscript import main


class ComparableFileContentsMixin:
    def assert_same_contents(self, first, second, msg=None):
        """Fail if the two file contents are unequal as determined by the '=='
        operator.

        Ignore trailing newlines in these files.
        """
        with open(first) as f_first, open(second) as f_second:
            # Files generated by Jinja2 do not have trailing newline.
            # Test data have trailing newline (due to editor setting).
            # So trim trailing newlines before compare.
            contents_first = f_first.read().rstrip()
            contents_second = f_second.read().rstrip()
            self.assertEqual(contents_first, contents_second)


class IntegrationTestCase(ComparableFileContentsMixin, TestCase):
    def test_should_generate_eel_templates(self):
        with tempfile.TemporaryDirectory() as tempdir_name:
            sys.argv = ["bringscript", "gui", "integration", tempdir_name]

            main.main()

            tempdir_path = Path(tempdir_name)
            script_path = tempdir_path / "gui" / "gui.py"
            html_path = tempdir_path / "gui" / "web" / "integration.html"
            self.assertTrue(script_path.exists())
            self.assertTrue(html_path.exists())

            tests_dir_path = Path(__file__).parent
            expected_data_path = (
                tests_dir_path
                / "data"
                / "test_integration"
                / "expected"
                / "eel"
            )
            expected_script_path = expected_data_path / "gui.py"
            expected_html_path = (
                expected_data_path / "web" / "integration.html"
            )
            self.assert_same_contents(script_path, expected_script_path)
            self.assert_same_contents(html_path, expected_html_path)
